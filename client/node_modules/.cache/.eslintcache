[{"/Users/clairebain/bootcamp/challenges/book-search-engine/client/src/index.js":"1","/Users/clairebain/bootcamp/challenges/book-search-engine/client/src/App.js":"2","/Users/clairebain/bootcamp/challenges/book-search-engine/client/src/pages/SavedBooks.js":"3","/Users/clairebain/bootcamp/challenges/book-search-engine/client/src/pages/SearchBooks.js":"4","/Users/clairebain/bootcamp/challenges/book-search-engine/client/src/components/Navbar.js":"5","/Users/clairebain/bootcamp/challenges/book-search-engine/client/src/components/SignupForm.js":"6","/Users/clairebain/bootcamp/challenges/book-search-engine/client/src/components/LoginForm.js":"7","/Users/clairebain/bootcamp/challenges/book-search-engine/client/src/utils/API.js":"8","/Users/clairebain/bootcamp/challenges/book-search-engine/client/src/utils/auth.js":"9","/Users/clairebain/bootcamp/challenges/book-search-engine/client/src/utils/localStorage.js":"10","/Users/clairebain/bootcamp/challenges/book-search-engine/client/src/utils/mutations.js":"11"},{"size":266,"mtime":1678316475956,"results":"12","hashOfConfig":"13"},{"size":923,"mtime":1678575658405,"results":"14","hashOfConfig":"13"},{"size":2946,"mtime":1678316476001,"results":"15","hashOfConfig":"13"},{"size":4665,"mtime":1678316476047,"results":"16","hashOfConfig":"13"},{"size":2524,"mtime":1678316475830,"results":"17","hashOfConfig":"13"},{"size":4087,"mtime":1678587234773,"results":"18","hashOfConfig":"13"},{"size":3518,"mtime":1678586862867,"results":"19","hashOfConfig":"13"},{"size":1419,"mtime":1678588223194,"results":"20","hashOfConfig":"13"},{"size":1234,"mtime":1678316476131,"results":"21","hashOfConfig":"13"},{"size":793,"mtime":1678316476172,"results":"22","hashOfConfig":"13"},{"size":518,"mtime":1678592275061,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"uieue9",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"27"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/clairebain/bootcamp/challenges/book-search-engine/client/src/index.js",[],[],[],"/Users/clairebain/bootcamp/challenges/book-search-engine/client/src/App.js",[],[],"/Users/clairebain/bootcamp/challenges/book-search-engine/client/src/pages/SavedBooks.js",[],[],"/Users/clairebain/bootcamp/challenges/book-search-engine/client/src/pages/SearchBooks.js",[],[],"/Users/clairebain/bootcamp/challenges/book-search-engine/client/src/components/Navbar.js",[],[],"/Users/clairebain/bootcamp/challenges/book-search-engine/client/src/components/SignupForm.js",["61","62","63"],[],"import React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\n\nimport { Link } from 'react-router-dom';\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\n\n// import { createUser } from '../utils/API';\nimport Auth from '../utils/auth';\n\nconst SignupForm = () => {\n  // // set initial form state\n  // const [userFormData, setUserFormData] = useState({ username: '', email: '', password: '' });\n  // // set state for form validation\n  const [validated] = useState(false);\n  // // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n\n  // const handleInputChange = (event) => {\n  //   const { name, value } = event.target;\n  //   setUserFormData({ ...userFormData, [name]: value });\n  // };\n\n  // const handleFormSubmit = async (event) => {\n  //   event.preventDefault();\n\n  //   // check if form has everything (as per react-bootstrap docs)\n  //   const form = event.currentTarget;\n  //   if (form.checkValidity() === false) {\n  //     event.preventDefault();\n  //     event.stopPropagation();\n  //   }\n\n  //   try {\n  //     const response = await createUser(userFormData);\n\n  //     if (!response.ok) {\n  //       throw new Error('something went wrong!');\n  //     }\n\n  //     const { token, user } = await response.json();\n  //     console.log(user);\n  //     Auth.login(token);\n  //   } catch (err) {\n  //     console.error(err);\n  //     setShowAlert(true);\n  //   }\n\n  //   setUserFormData({\n  //     username: '',\n  //     email: '',\n  //     password: '',\n  //   });\n  // };\n\n\n  const [formState, setFormState] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group>\n          <Form.Label htmlFor='username'>Username</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your username'\n            name='username'\n            onChange={handleChange}\n            value={formState.username}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Username is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Your email address'\n            name='email'\n            onChange={handleChange}\n            value={formState.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleChange}\n            value={formState.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(formState.username && formState.email && formState.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default SignupForm;\n","/Users/clairebain/bootcamp/challenges/book-search-engine/client/src/components/LoginForm.js",["64","65","66"],[],"// see SignupForm.js for comments\nimport React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { LOGIN_USER } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nconst LoginForm = () => {\n\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: '',\n      password: '',\n    });\n  };\n\n  // const [userFormData, setUserFormData] = useState({ email: '', password: '' });\n\n\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n\n\n\n\n  // const handleInputChange = (event) => {\n  //   const { name, value } = event.target;\n  //   setUserFormData({ ...userFormData, [name]: value });\n  // };\n\n  // const handleFormSubmit = async (event) => {\n  //   event.preventDefault();\n\n  //   // check if form has everything (as per react-bootstrap docs)\n  //   const form = event.currentTarget;\n  //   if (form.checkValidity() === false) {\n  //     event.preventDefault();\n  //     event.stopPropagation();\n  //   }\n\n  //   try {\n  //     const response = await loginUser(userFormData);\n\n  //     if (!response.ok) {\n  //       throw new Error('something went wrong!');\n  //     }\n\n  //     const { token, user } = await response.json();\n  //     console.log(user);\n  //     Auth.login(token);\n  //   } catch (err) {\n  //     console.error(err);\n  //     setShowAlert(true);\n  //   }\n\n  //   setUserFormData({\n  //     username: '',\n  //     email: '',\n  //     password: '',\n  //   });\n  // };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your email'\n            name='email'\n            onChange={handleChange}\n            value={formState.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleChange}\n            value={formState.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(formState.email && formState.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","/Users/clairebain/bootcamp/challenges/book-search-engine/client/src/utils/API.js",[],[],"/Users/clairebain/bootcamp/challenges/book-search-engine/client/src/utils/auth.js",["67"],[],"// use this to decode a token and get the user's information out of it\nimport decode from 'jwt-decode';\n\n// create a new class to instantiate for a user\nclass AuthService {\n  // get user data\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  // check if user's logged in\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token); // handwaiving here\n  }\n\n  // check if token is expired\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","/Users/clairebain/bootcamp/challenges/book-search-engine/client/src/utils/localStorage.js",[],[],"/Users/clairebain/bootcamp/challenges/book-search-engine/client/src/utils/mutations.js",[],[],{"ruleId":"68","severity":1,"message":"69","line":4,"column":10,"nodeType":"70","messageId":"71","endLine":4,"endColumn":14},{"ruleId":"68","severity":1,"message":"72","line":63,"column":21,"nodeType":"70","messageId":"71","endLine":63,"endColumn":26},{"ruleId":"68","severity":1,"message":"73","line":63,"column":28,"nodeType":"70","messageId":"71","endLine":63,"endColumn":32},{"ruleId":"68","severity":1,"message":"69","line":4,"column":10,"nodeType":"70","messageId":"71","endLine":4,"endColumn":14},{"ruleId":"68","severity":1,"message":"72","line":13,"column":19,"nodeType":"70","messageId":"71","endLine":13,"endColumn":24},{"ruleId":"68","severity":1,"message":"73","line":13,"column":26,"nodeType":"70","messageId":"71","endLine":13,"endColumn":30},{"ruleId":"74","severity":1,"message":"75","line":49,"column":1,"nodeType":"76","endLine":49,"endColumn":34},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'data' is assigned a value but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration"]